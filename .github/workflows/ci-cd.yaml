name: MLOps CICD
on:
  push:
    branches: [main]
    # paths:
    # - '*.ipynb'
  
env:
  GCS_SOURCE: "thermal-imprint-425305-u1-source-bucket"
  GCS_OUTPUT: "thermal-imprint-425305-u1-output-bucket"
  
jobs:
  jupyter-notebook-cicd:
    name:  Jupyter Notebook CICD 
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs: 
      notebook_files: ${{ steps.getnotebooks.outputs.notebook_files }}

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      # - name: Authenticate with Google Cloud
      #   uses: 'google-github-actions/auth@v2'
      #   with:
      #     service_account: ${{ secrets.SERVICE_ACCOUNT }}
      #     workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

      # Fetching SHA 
      # - name: Fetch Updated Jupyter Notebooks
      #   id: getnotebooks        
      #   run: |
      #     set +x
      #     echo "Printing GitHub SHA: $GITHUB_SHA"
      #     updated_files=$(git diff-tree --no-commit-id --name-only -r $GITHUB_SHA)
      #     echo "UPDATED_FILES=$(echo $updated_files | tr '\n' ' ')" >> $GITHUB_ENV
      #     set -x

      # - name: List Updated Notebooks
      #   run: |
      #     echo "Listing updated notebooks: $UPDATED_NOTEBOOKS"

      - name: Identify Modified Jupyter Notebooks
        run: |
          set +x 
          # Get the list of all Jupyter Notebook files modified in the last commit(s) of the current branch
          CHANGED_NOTEBOOKS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.ipynb$')
          
          if [ -z "$CHANGED_NOTEBOOKS" ]; then
            echo "No Jupyter notebooks have been modified in this push."
          else
            echo "Modified Jupyter notebooks in this push:"
            echo "$CHANGED_NOTEBOOKS"
          fi

          # Set the output variable for modified notebooks
          echo "changed_notebooks=$CHANGED_NOTEBOOKS" >> $GITHUB_ENV

          
         
      # - name: Print Updated Jupyter Notebooks    
      #   run: |
      #     echo 'Updated Notebooks Output :${{ needs.getnotebooks.outputs.notebook_files }}'
      #     echo 'Updated Notebooks Env Var :${{ env.notebook_files_env }}'
          
      # - name: Execute Jupyter Notebook on Vertex AI
      #   id: notebook-review
      #   uses: google-github-actions/run-vertexai-notebook@v0
      #   with:
      #       gcs_source_bucket: '${{ env.GCS_SOURCE }}'
      #       gcs_output_bucket: '${{ env.GCS_OUTPUT }}'
      #       allowlist: '${{ needs.getnotebooks.outputs.notebook_files }}'

      # - name: Run Jupyter Notebooks
      #   run: |
      #     for i in ${{ steps.getfile.outputs.files }}
      #     do
      #         echo 'Running $i in AI Platform Training'
      #         gcloud-notebook-training --input-notebook $i  --project-id ${{ secrets.PROJECT_ID }}            
      #     done
